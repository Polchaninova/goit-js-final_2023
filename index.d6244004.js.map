{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,oDCEA,SAASC,IACPC,EAAAC,KAAKC,OAAOC,UAAUC,IAAI,UAC1BJ,EAAAC,KAAKI,oBAAoBF,UAAUC,IAAI,O,CAGzC,SAASE,IACPN,EAAAC,KAAKC,OAAOC,UAAUI,OAAO,UAC7BP,EAAAC,KAAKI,oBAAoBF,UAAUI,OAAO,O,CAO5C,SAASC,IACPR,EAAAC,KAAKQ,aAAaN,UAAUI,OAAO,a,EAjBrCP,EAAAF,EAAA,UDQAG,KAAKI,oBAAoBK,iBAAiB,SAgC1C,SAAqBC,GAEnB,GADAA,EAAEC,iBACED,EAAEE,OAAOV,UAAUW,SAAS,WAAY,CAC1C,MAAMC,GAAEA,GAAOJ,EAAEE,OAAOG,QAAQ,aAAaC,QAE7C,IAAIC,GAAQ,EAAArB,EAAAsB,uBAAsBC,OAAOL,IACrCG,IAGFA,GAAQ,EAAArB,EAAAwB,kBAAiBD,OAAOL,IAChCO,QAAQC,IAAIL,KAHZ,EAAAM,EAAAC,aAAYP,E,KAtClB,IAAIQ,EAAY,GAEhB1B,EAAAC,KAAK0B,UAAUjB,iBAAiB,UAQhCkB,eAAwBjB,GACtBA,EAAEC,iBACFc,EAAYf,EAAEkB,cAAcC,SAASC,MAAMC,OAE3C,EAAAC,EAAAC,aACA1B,SAiCAR,EAAAC,KAAKI,oBAAoB8B,UAAY,IA9BnB,KAAdT,GCdJ1B,EAAAC,KAAKQ,aAAaN,UAAUC,IAAI,eDiBhC,EAAA6B,EAAAC,aACAnC,KACA,EAAAF,EAAAuC,cAAaV,GACVW,MAAKT,MAAOU,IACXtC,EAAAC,KAAKI,oBAAoB8B,gBAAkB,EAAAI,EAAAC,oBAAmBF,GAC9DhB,QAAQC,IAAIe,EAAO,IAEpBG,QAAQnC,E,IAxBboC,OAAOC,OAASf,iBACd7B,IACA,MAAM6C,QAAuB,EAAA/C,EAAAgD,gBAC7BvC,IACAN,EAAAC,KAAKI,oBAAoB8B,gBAAkB,EAAAI,EAAAC,oBAAmBI,E,EA+C/C,IAAIE,sBAAqBC,IAExCA,EAAQC,SAAQC,IACd,GAAIA,EAAMC,eAAgB,CAExB,GADA5B,QAAQC,IAAI,iBACPG,EACH,QAEF,EAAA7B,EAAAuC,cAAaV,GACVW,MAAKT,MAAOU,IACXtC,EAAAC,KAAKI,oBAAoB8C,mBAAmB,kBAAmB,EAAAZ,EAAAC,oBAAmBF,GAAQ,G,IAIjG,GAlBa,CACdc,WAAY,QACZC,UAAW,KAmBJC,QAAQC,SAASC,cAAc","sources":["src/index.js","src/js/showLoader.js"],"sourcesContent":["import { findInfoForMovie, findTrendInfoForMovie, loadTrending, searchMovies } from './js/findTrendInfo'\nimport { createModal } from './js/modalRender'\nimport { fetchMovies, resetPage } from './js/movie-API'\nimport { refs } from './js/refs'\nimport { createMarkupMovies } from './js/renderMarkup'\nimport { hideLoader, removeNotification, showLoader, showNotification } from './js/showLoader'\n\n\nrefs.containerCardMovies.addEventListener('click', onClickCard)\nlet movieName = '';\n\nrefs.formBoxes.addEventListener('submit', onSearch)\n\nwindow.onload = async function () { //при загрузке страницы запустить сткрипт window.onload = вызов ф-и\n  showLoader()\n  const trendingMovies = await loadTrending()\n  hideLoader()\n  refs.containerCardMovies.innerHTML = await createMarkupMovies(trendingMovies);\n}\nasync function onSearch(e) {\n  e.preventDefault()\n  movieName = e.currentTarget.elements.query.value;\n\n  resetPage()\n  removeNotification()\n  clearCard()\n\n  if (movieName === \"\") {\n    showNotification()\n  }\n  resetPage()\n  showLoader()\n  searchMovies(movieName)\n    .then(async (movies) => {\n      refs.containerCardMovies.innerHTML = await createMarkupMovies(movies)\n      console.log(movies);\n    })\n    .finally(hideLoader)\n}\n\nfunction onClickCard(e) {\n  e.preventDefault()\n  if (e.target.classList.contains('js-info')) {\n    const { id } = e.target.closest('[data-id]').dataset;\n\n    let movie = findTrendInfoForMovie(Number(id));\n    if (movie) {\n      createModal(movie);\n    } else {\n      movie = findInfoForMovie(Number(id));\n      console.log(movie);\n      createModal(movie);\n    }\n  }\n}\n\nfunction clearCard() {\n  refs.containerCardMovies.innerHTML = '';\n}\n//2 открытия ресурса при прокрутки страницы\nconst options = {\n  rootMargin: \"200px\",\n  threshold: 0.5,\n};\nconst observer = new IntersectionObserver(entries => {\n\n  entries.forEach(entry => {\n    if (entry.isIntersecting) { // если сейчас ЕЛЕМЕНТ вошел во вьюпорт\n      console.log(\"Intersecting\");\n      if (!movieName) {\n        return\n      }\n      searchMovies(movieName)\n        .then(async (movies) => {\n          refs.containerCardMovies.insertAdjacentHTML('beforeend', await createMarkupMovies(movies))\n        })\n    }\n  }\n  )\n}, options);\n\nobserver.observe(document.querySelector('.scroll-guard'))\n\n\n\n\n// (await Promise.all(movie.map(\n//   async ({ poster_path, title, genre_ids, vote_average, vote_count, popularity, original_title, overview }) => {\n\n//     const UrlImg = poster_path// добавить заглушку если нет изображения!\n//       ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n//       : 'https://placehold.co/600x800'ret\n\n","import { refs } from \"./refs\";\n\nfunction showLoader() {\n  refs.loader.classList.add('active')\n  refs.containerCardMovies.classList.add('hide')\n}\n\nfunction hideLoader() {\n  refs.loader.classList.remove('active')\n  refs.containerCardMovies.classList.remove('hide')\n}\n\nfunction showNotification() {\n  refs.notification.classList.add(\"is-visible\");\n}\n\nfunction removeNotification() {\n  refs.notification.classList.remove(\"is-visible\");\n}\nexport { showLoader, hideLoader, showNotification, removeNotification }"],"names":["$jXXA5","parcelRequire","$2836ccc6bab45494$export$56525cbb1fcd885c","$krGWQ","refs","loader","classList","add","containerCardMovies","$2836ccc6bab45494$export$5cee2c2772922923","remove","$2836ccc6bab45494$export$92eb0ea44f8c9242","notification","addEventListener","e","preventDefault","target","contains","id","closest","dataset","movie","findTrendInfoForMovie","Number","findInfoForMovie","console","log","$2Tlgh","createModal","$1f0dc3b9307be026$var$movieName","formBoxes","async","currentTarget","elements","query","value","$hQJwd","resetPage","innerHTML","searchMovies","then","movies","$cky31","createMarkupMovies","finally","window","onload","trendingMovies","loadTrending","IntersectionObserver","entries","forEach","entry","isIntersecting","insertAdjacentHTML","rootMargin","threshold","observe","document","querySelector"],"version":3,"file":"index.d6244004.js.map"}